apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = 1.8
targetCompatibility = 1.8

if (!hasProperty('mainClass')) {
    ext.mainClass = 'Ic2ExpReactorPlanner.ReactorPlannerFrame'
}
mainClassName = ext.mainClass

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

sourceSets {
    main {
        java {
            srcDirs 'src'
        }
        resources {
            srcDir 'src'
        }
    }

    test {
        java {
            srcDir 'test'
        }
        resources {
            srcDir 'testResources'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.9'
    testImplementation group: 'junit', name: 'junit', version: '4.10'
    testImplementation 'org.hamcrest:hamcrest-core:1.3'
}

jar {
    from('src') {
        include 'assets/**/*.png'
        include 'Ic2ExpReactorPlanner/Bundle*.properties'
    }
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

task processAssets(type: Copy) {
    from('src') {
        include 'assets/**/*.png'
        include 'Ic2ExpReactorPlanner/Bundle*.properties'
    }
    into 'build/classes/java/main'
}

run {
    dependsOn processAssets
}

task processSource(type: Copy) {
    from sourceSets.main.java
    def version = project.hasProperty('erpVersion') ? erpVersion : 'dev'
    inputs.property 'erpVersion', version
    filter { line -> line.replaceAll('@VERSION@', version) }
    into "$buildDir/generated-src"
}

compileJava {
    dependsOn processSource
    source = processSource.outputs.files
}

processTestResources {
    from sourceSets.main.resources
}

test {
    useJUnit()
}